{"name":"Flipper Cassanity","tagline":"Cassanity adapter for Flipper.","body":"# Flipper::Cassanity\r\n\r\nA [Cassanity](https://github.com/jnunemaker/cassanity) adapter for [Flipper](https://github.com/jnunemaker/flipper).\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'flipper-cassanity'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install flipper-cassanity\r\n\r\n## Usage\r\n\r\n```ruby\r\n# Assumes keyspace created and column family exists with this schema:\r\n#   {\r\n#     primary_key: [:key, :field],\r\n#     columns: {\r\n#       key: :text,\r\n#       field: :text,\r\n#       value: :text,\r\n#     },\r\n#   }\r\n\r\nrequire 'flipper/adapters/cassanity'\r\ncolumn_family = Cassanity::Client.new[:cassanity][:flipper]\r\nadapter = Flipper::Adapters::Cassanity.new(column_family)\r\nflipper = Flipper.new(adapter)\r\n# profit...\r\n```\r\n\r\n## Internals\r\n\r\nEach feature is stored in a single row, which means getting a feature is single query.\r\n\r\n```ruby\r\nrequire 'flipper/adapters/cassanity'\r\ncolumn_family = Cassanity::Client.new[:cassanity][:flipper]\r\nadapter = Flipper::Adapters::Cassanity.new(column_family)\r\nflipper = Flipper.new(adapter)\r\n\r\n# Register a few groups.\r\nFlipper.register(:admins) { |thing| thing.admin? }\r\nFlipper.register(:early_access) { |thing| thing.early_access? }\r\n\r\n# Create a user class that has flipper_id instance method.\r\nUser = Struct.new(:flipper_id)\r\n\r\nflipper[:stats].enable\r\nflipper[:stats].enable flipper.group(:admins)\r\nflipper[:stats].enable flipper.group(:early_access)\r\nflipper[:stats].enable User.new('25')\r\nflipper[:stats].enable User.new('90')\r\nflipper[:stats].enable User.new('180')\r\nflipper[:stats].enable flipper.random(15)\r\nflipper[:stats].enable flipper.actors(45)\r\n\r\nflipper[:search].enable\r\n\r\nputs 'all docs in collection'\r\npp column_family.select\r\n# all docs in collection\r\n# [{\"_id\"=>\"stats\",\r\n#   \"actors\"=>[\"25\", \"90\", \"180\"],\r\n#   \"boolean\"=>\"true\",\r\n#   \"groups\"=>[\"admins\", \"early_access\"],\r\n#   \"percentage_of_actors\"=>\"45\",\r\n#   \"percentage_of_random\"=>\"15\"},\r\n#  {\"_id\"=>\"flipper_features\", \"features\"=>[\"stats\", \"search\"]},\r\n#  {\"_id\"=>\"search\", \"boolean\"=>\"true\"}]\r\nputs\r\n\r\nputs 'flipper get of feature'\r\npp adapter.get(flipper[:stats])\r\n# flipper get of feature\r\n# {:boolean=>\"true\",\r\n#  :groups=>#<Set: {\"admins\", \"early_access\"}>,\r\n#  :actors=>#<Set: {\"25\", \"90\", \"180\"}>,\r\n#  :percentage_of_actors=>\"45\",\r\n#  :percentage_of_random=>\"15\"}\r\n```\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}